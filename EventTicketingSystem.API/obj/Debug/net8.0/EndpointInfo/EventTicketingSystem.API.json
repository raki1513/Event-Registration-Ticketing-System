{
  "openapi": "3.0.1",
  "info": {
    "title": "JWT API",
    "version": "v1"
  },
  "paths": {
    "/api/admin/assign-role": {
      "post": {
        "tags": [
          "AdminDashboard"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/admin/create": {
      "post": {
        "tags": [
          "AdminDashboard"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/admin/allEvent": {
      "get": {
        "tags": [
          "AdminDashboard"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/admin/GetEventby{title}": {
      "put": {
        "tags": [
          "AdminDashboard"
        ],
        "parameters": [
          {
            "name": "title",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/admin/DeletEvetby{title}": {
      "delete": {
        "tags": [
          "AdminDashboard"
        ],
        "parameters": [
          {
            "name": "title",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/attendee/book-ticket": {
      "post": {
        "tags": [
          "AttendeDashboard"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookTicketDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookTicketDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookTicketDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/eventhost/Create an Event": {
      "post": {
        "tags": [
          "EvenHostDashboard"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/eventhost/GetAllEvents": {
      "get": {
        "tags": [
          "EvenHostDashboard"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/eventhost/GetEventBy{title}": {
      "put": {
        "tags": [
          "EvenHostDashboard"
        ],
        "parameters": [
          {
            "name": "title",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/eventhost/DeletEventBy{title}": {
      "delete": {
        "tags": [
          "EvenHostDashboard"
        ],
        "parameters": [
          {
            "name": "title",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/RegisterAndLogin/UserRegister": {
      "post": {
        "tags": [
          "RegisterAndLogin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/RegisterAndLogin/UserLogin": {
      "post": {
        "tags": [
          "RegisterAndLogin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AssignRoleDto": {
        "required": [
          "Email",
          "RoleName"
        ],
        "type": "object",
        "properties": {
          "Email": {
            "minLength": 1,
            "type": "string"
          },
          "RoleName": {
            "maxLength": 30,
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BookTicketDto": {
        "required": [
          "AttendeeEmail",
          "EventTitle"
        ],
        "type": "object",
        "properties": {
          "AttendeeEmail": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "EventTitle": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateEventDto": {
        "required": [
          "Capacity",
          "HostEmail",
          "Location",
          "Title"
        ],
        "type": "object",
        "properties": {
          "Title": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          },
          "Location": {
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[a-zA-Z\\s]+$",
            "type": "string"
          },
          "Capacity": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "HostEmail": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          }
        },
        "additionalProperties": false
      },
      "LoginDTO": {
        "required": [
          "Password",
          "Username"
        ],
        "type": "object",
        "properties": {
          "Username": {
            "minLength": 1,
            "type": "string"
          },
          "Password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserDto": {
        "required": [
          "Email",
          "Password",
          "Username"
        ],
        "type": "object",
        "properties": {
          "Username": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          },
          "Email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "Password": {
            "minLength": 6,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Paste only the JWT token.Do Not Include the word 'Bearer'.",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}